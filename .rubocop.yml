AllCops:
  DisplayCopNames: true
  DisplayStyleGuide: true
  Exclude:
   # exclude generated code (maybe we'll rewrite it anyway one day)
   - models/network.rb

# Assignment Branch Condition size for initialize is too high
# Perceived complexity for deep_merge is too high
# Cyclomatic complexity for ... is too high
# Line is too long
# Method has too many lines
# ...
# (wtf)
Metrics:
  Enabled: false

# Use the return of the conditional for variable assignment and comparison
# (wtf)
Style/ConditionalAssignment:
  Enabled: false

# Favor format over sprintf
# (easy to read)
Style/FormatString:
  Enabled: false

# Do not introduce global variables
# (do want)
Style/GlobalVars:
  Exclude:
    - application.rb
    - lib/api.rb
    - lib/nebula.rb

# Extra empty line detected at class body end
# (easy to read)
Style/EmptyLinesAroundClassBody:
  Enabled: false

# Extra empty line detected at module body beginning
# Extra empty line detected at module body end
# (easy to read)
Style/EmptyLinesAroundModuleBody:
  Enabled: false

# Favor modifier if usage when having a single-line body
# (easy to read)
Style/IfUnlessModifier:
  Enabled: false

# Missing space after #
# (debugging)
Style/LeadingCommentSpace:
  Enabled: false

# Do not use parentheses for method calls with no arguments
# (easy to read)
Style/MethodCallParentheses:
  Enabled: false

# Freeze mutable objects assigned to constants
# (easy to read)
Style/MutableConstant:
  Enabled: false

# Favor unless over if for negative conditions
# (easy to read)
Style/NegatedIf:
  Enabled: false

# Redundant return detected
# (easy to read)
Style/RedundantReturn:
  Enabled: false

# Avoid comma after the last item of an array
# (do want)
Style/TrailingCommaInLiteral:
  Enabled: false
